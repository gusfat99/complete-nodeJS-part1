const fs = require("fs");
const path = require("path");

const p = path.join(path.dirname(process.mainModule.filename), "data", "cart.json");

module.exports = class Cart {

    static fetchDataCart(callBack) {
        fs.readFile(p, (err, fileContent) => {
            if(err) {
                callBack(null);
            } else {
                callBack(JSON.parse(fileContent));
            }
        });
    }

    static addProductToCart(productId, productPrice) {
         // Fetch the previous cart
        fs.readFile(p, (err, fileContent) => {
            let cart = { products : [], totalPrice : 0 };
            if(!err) {
                cart = JSON.parse(fileContent);
            }
             // Analyze the cart => Find existing product
            const existingProductIndex = cart.products.findIndex(prod => prod.id === productId);
            const existingProduct = cart.products[existingProductIndex];

            // Add new product or increase quantity
            let updatedProduct;
            if(existingProduct) {
                console.log(existingProduct);
                updatedProduct = {...existingProduct};
                updatedProduct.qty = updatedProduct.qty + 1;
                cart.products = [...cart.products];
                cart.products[existingProductIndex] = updatedProduct;
            } else {
                updatedProduct = { id : productId, qty : 1 };
                cart.products = [...cart.products, updatedProduct];
            }
            cart.totalPrice = +cart.totalPrice + +productPrice;
            fs.writeFile(p, JSON.stringify(cart), err => {
                console.log(err);
            });
             
        });
    }

    static deleteProductFromCart(id, productPrice) {
        fs.readFile(p, (err, fileContent) => {
            if(err) {
                return;
            }
            const updatedCart = {...JSON.parse(fileContent)};
            const product = updatedCart.products.find(prod => +prod.id === +id);
            if(!product) {
                return;
            }
            const prodQty = product.qty;
            updatedCart.products = updatedCart.products.filter(prod => +prod.id !== +id);
            updatedCart.totalPrice =  updatedCart.totalPrice - productPrice * prodQty;
            fs.writeFile(p, JSON.stringify(updatedCart), err => {
                console.log(err);
            });
        });
    }
}